package commands;

import errorHandler.NonvalidArgumentException;
import errorHandler.Validator;
import java.util.Map;
import data.*;

/**
 * @author Junheng Wang, Hyun Woo (Eddie) Shin
 */
public class Tree implements Command {

  private static String indentation(int indent) {
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < indent; i++) {
      sb.append("  ");
    }
    return sb.toString();
  }

   private static void printFileName(data.File f, int indent, StringBuilder sb) {
   sb.append(indentation(indent));
   sb.append("  ");
   sb.append(f.getFileName());
   
   sb.append("\n");
   }

  private static void printDirectoryName(data.Directory dir, int indent, StringBuilder sb) {

    sb.append(indentation(indent));
    //sb.append("  ");
    sb.append(dir.getDirName());
    sb.append("/");
    sb.append("\n");
    
    for (Map.Entry<String, File> t: dir.getFileHashMap().entrySet())
      printFileName(t.getValue(), indent + 1, sb);

    for (Map.Entry<String, Directory> d : dir.getDirectoryHashMap().entrySet()) {
      printDirectoryName(d.getValue(), indent + 1, sb);
    }

    // for (File file : folder.listFiles()) {
    // if (file.isDirectory()) {
    // printDirectoryTree(file, indent + 1, sb);
    // } else {
    // printFile(file, indent + 1, sb);
    // }
    // }

  }

  @Override
  public String run(FileManager fm, String[] args) throws NonvalidArgumentException {

    if (!Validator.checkNumArgs(1, args)) {
      throw new NonvalidArgumentException("error with arguments, only 1 argument expected");
    }
    
//
//    int indent = 0;
//    StringBuilder sb = new StringBuilder();
//    Directory root = fm.getRoot();
//    printDirectoryName(root, indent, sb);
//    return sb.toString();


  }

}
