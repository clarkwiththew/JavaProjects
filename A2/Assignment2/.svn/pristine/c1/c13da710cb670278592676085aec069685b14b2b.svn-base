package driver;

import java.util.HashMap;

public class directory {

  private directory parentDir;
  private String dirName;

  private HashMap<String, directory> directoryMap=new HashMap<String, directory>();
  private HashMap<String, file> fileMap= new HashMap<String, file>();
  
  public directory getParentDir() {
	    return parentDir;
	  }

  public String getDirName() {
	    return this.dirName;
	  }

  public directory(String nameToAdd) {
    this.dirName = nameToAdd;
  }


  public directory(String nameToAdd, directory parentToAdd) {
    this.dirName=nameToAdd;
    this.parentDir = parentToAdd;
  }



  public void setDirectory(String nameOfDir, directory dirToAdd )
      throws nonvalidPathException {
    if (directoryMap.containsKey(nameOfDir)) {
      throw new nonvalidPathException(
          "directory already exists");
    }
    directoryMap.put(nameOfDir, dirToAdd);
    dirToAdd.parentDir = this;
  }


  public directory getDirectory(String name) throws nonvalidPathException {
    if (directoryMap.containsKey(name)) {
      return directoryMap.get(name);
    } else {
      throw new nonvalidPathException("Directory does not exist");
    }
  }


  public void setFile(String nameOfFile, file fileToAdd) throws nonvalidPathException {
    if (fileMap.containsKey(nameOfFile)) {
      throw new nonvalidPathException(
          "file already exists");
    } else {
      fileMap.put(nameOfFile, fileToAdd);
    }
  }


  public file getFile(String nameOfFile) throws nonvalidPathException {
    if (fileMap.containsKey(nameOfFile)) {
      return fileMap.get(nameOfFile);
    } else {
      throw new nonvalidPathException("file not found");
    }
  }


}
