package commands;

import data.JFileManager;
import errorHandler.NonvalidArgumentException;
import java.io.*;
import driver.*;

public class LoadJShell implements Command {

  @SuppressWarnings("resource")
  @Override
  public String run(JFileManager fm, String[] args) throws NonvalidArgumentException {

    if (args.length > 2)
      throw new NonvalidArgumentException("error, too many arguments for LoadJShell");
    FileInputStream fis;
    ObjectInputStream ois;
    try {
      fis = new FileInputStream(args[1]);
    } catch (Exception e) {
      throw new NonvalidArgumentException("error, something wrong with loading a file");
    }

    try {
      ois = new ObjectInputStream(fis);
    } catch (Exception e) {
      throw new NonvalidArgumentException("error, something wrong with loading an object");
    }

    JFileManager loaded = null;
    try {
      loaded = (JFileManager) ois.readObject();
    } catch (ClassNotFoundException e) {
      e.printStackTrace();
      // throw new NonvalidArgumentException(
      // "ClassNotFound, something wrong with loading JFM to JShell");
    } catch (IOException e) {
      e.printStackTrace();
      // throw new NonvalidArgumentException(
      // "IOException, something wrong with loading JFM to JShell");
    }
    try {
      if (loaded != null) {
        System.out.println("It's not null");
        fm.setCurrent(loaded.getCurrent());
        fm.setDirectoryStack(loaded.getDirectoryStack());
        fm.mergeInputHistory(loaded.getInputHistory());
      }
      else {
        System.out.println("It's null...");
      }

    } catch (Exception e) {
      e.printStackTrace();
    }



    return "";
  }

}
