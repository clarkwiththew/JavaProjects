package commands;

import data.*;


import errorHandler.NonvalidArgumentException;

// TODO: Auto-generated Javadoc
/**
 * The Class mkdir.
 */
public class Mkdir implements Command {

  /**
   * Create directories, each of which may be relative to the current directory or may be a full
   * path.
   *
   * @param fm the fileManager where the command is executed
   * @param args The directories to be created
   * @return A string of a new line, meaning no errors were encountered.
   */
  public String run(JFileManager fm, String[] args) throws NonvalidArgumentException{
    Directory currentDir = fm.getCurrent();
    if (args.length != 3) {
      //return "error, you do not have 2 directories as arguments\n";
      throw new errorHandler.NonvalidArgumentException("error with arguments");
 
    } else {
      for (int i = 1; i < args.length; i++) {
        if (args[i].chars().filter(num -> num == '/').count() == 0) {//interview must explain it, jdk 1.9 anonymous function
          try {
            if (args[i].matches("^.*[^a-zA-Z0-9 ].*$")) {
              throw new errorHandler.NonvalidArgumentException("error nonvalid arguments");
            }
            Directory tempdirectory = new Directory(args[i], currentDir);
            currentDir.setDirectory(args[i], tempdirectory);
          } catch (Exception e) {
            throw new errorHandler.NonvalidArgumentException("error could not make directory");
          }
        }
        else {
          //whole path before directory 
          String arg = args[i].substring(0, args[i].lastIndexOf("/")+1);
          //directory name
          String argDirName = args[i].substring(args[i].lastIndexOf("/")+1, args[i].length());
          if(argDirName.matches("^.*[^a-zA-Z0-9 ].*$")) {
            throw new errorHandler.NonvalidArgumentException("nonvalid file name was given");
            }
          try {
            Directory tempdirectory = new Directory(argDirName, fm.pathToCurrent(currentDir, arg));
            fm.pathToCurrent(currentDir, arg).setDirectory(argDirName, tempdirectory);
          } catch (Exception e) {
            throw new errorHandler.NonvalidArgumentException("error with arguments");
          }
        }
      }
      return "";
    }
  }
}
