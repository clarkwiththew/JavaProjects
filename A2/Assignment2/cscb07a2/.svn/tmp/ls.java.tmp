package commands;

import driver.*;

// TODO: Auto-generated Javadoc
/**
 * The Class ls.
 */
public class ls implements command {

  /**
   * Print the contents	(file or directory) of the current directory, 
   * with a	new	line following each	of the content (file or	directory)
   *
   * @param fm the fileManager where the command is executed
   * @param args The path of the file or directory 
   * @return Contents of the directory or the contents of the file or a 
   * 		 suitable error message
   */
  public String run(fileManager fm, String[] args) {

    String output = "";
    // no path is given, ls current path
    if (args.length == 1) {
      output += fm.getCurrent().getDirKey() + "\n";
      output += fm.getCurrent().getFileKey();
    }

    else {
<<<<<<< .mine
      
      //full path
      if(args[1].indexOf("/")==0) {
        
      }
      
      // for each path
      for (int i = 1; i < args.length; i++) {
        //if current path is a file in the current directory
        if (fm.getCurrent().containsFileKey(args[i])) {
          //print the file path with a newline
          output += args[i]+"\n";
        }
        //if current path is a subdirectory in the current directory

        else if (fm.getCurrent().containsDirectoryKey(args[i])) {
          //print dir path along with its contents
          output += args[i]+":"+"\n";
          output += fm.getCurrent().getFileKey() + "\n";
          output += fm.getCurrent().getDirKey() + "\n";
          output += "\n";

        }
        else {
          return "path not found "+"\n";
        }

      }
    }
=======
	directory currentDir = fm.getCurrent();
        try {
        	currentDir = fm.pathToCurrent(currentDir, args[1]);
			output += currentDir.getDirKey() + "\n";
		    output += currentDir.getFileKey();
		} catch (Exception e) {
			return "invalid path";
		}
	}
    
>>>>>>> .r174
    return output;
  }

}
