// **********************************************************
// Assignment2:
// Student1:
// UTORID user_name: wangj930
// UT Student #: 1006390031
// Author: Junheng Wang
//
// Student2:
// UTORID user_name: anadaeth
// UT Student #: 1003171907
// Author: Ethan Ananda
//
// Student3:
// UTORID user_name: shinhy22
// UT Student #: 997743615
// Author: Hyun Woo (Eddie) Shin
//
// Student4:
// UTORID user_name: chouivan
// UT Student #: 1003599732
// Author: Ivanhoe Chou
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC B07 and understand the consequences.
// *********************************************************
package commands;

import data.*;
import errorHandler.NonvalidArgumentException;
import java.io.*;
import driver.*;
/**
 * @author Junheng Wang, Hyun Woo (Eddie) Shin, Ivanhoe Chou, Ethan Ananda
 */
public class LoadJShell implements Command {

  
  public String run(FileManager fm, String[] args) throws NonvalidArgumentException {
    if (args.length > 2)
      throw new NonvalidArgumentException("error, too many arguments for LoadJShell");
    FileInputStream fis;
    ObjectInputStream ois;
    try {
      fis = new FileInputStream(args[1]);
    } catch (Exception e) {
      throw new NonvalidArgumentException("error, something wrong with loading a file");
    }
    try {
      ois = new ObjectInputStream(fis);
    } catch (Exception e) {
      throw new NonvalidArgumentException("error, something wrong with loading an object");
    }
    JFileManager loaded = null;
    try {
      loaded = (JFileManager) ois.readObject();
    } catch (ClassNotFoundException e) {
      e.printStackTrace();
    } catch (IOException e) {
      e.printStackTrace();
    }
    try {
      if (loaded != null) {
        System.out.println("previous session info is loaded now.");
        fm.setCurrent(loaded.getCurrent());

        fm.setDirectoryStack(loaded.getDirectoryStack());

        fm.updateInputHistory(loaded.getInputHistory());
      } else {
        System.out.println("It's null...");
      }
    } catch (Exception e) {
      e.printStackTrace();
    }
    return "";
  }


}
