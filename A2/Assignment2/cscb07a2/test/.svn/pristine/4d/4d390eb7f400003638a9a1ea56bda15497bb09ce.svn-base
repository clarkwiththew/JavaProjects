// **********************************************************
// Assignment2:
// Student1:
// UTORID user_name: wangj930
// UT Student #: 1006390031
// Author: Junheng Wang
//
// Student2:
// UTORID user_name: anadaeth
// UT Student #: 1003171907
// Author: Ethan Ananda
//
// Student3:
// UTORID user_name: shinhy22
// UT Student #: 997743615
// Author: Hyun Woo (Eddie) Shin
//
// Student4:
// UTORID user_name: chouivan
// UT Student #: 1003599732
// Author: Ivanhoe Chou
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC B07 and understand the consequences.
// *********************************************************
package test;

import java.util.ArrayList;
import java.util.Stack;

import data.Directory;
import data.File;
import data.FileManager;
import errorHandler.NonvalidArgumentException;

/**
 * @author Junheng Wang, Hyun Woo (Eddie) Shin, Ivanhoe Chou, Ethan Ananda
 */
public class MockFileManager implements FileManager {
	
	public java.util.HashMap<String, String> files;
	public java.util.HashMap<String, Directory> directories;
	public ArrayList<String> history;
	public java.util.Stack<String> stack;
	public String currentDirectory;
	
	
	public String fullCurrDirPath;
//	public Directory root;
//	public Directory current;
//	public Stack<Directory> directoryStack;
//	public static ArrayList<String> inputHistory; // will be used for serialization
	
	
	/**
	 * Initializes the attributes
	 */
	
	  public MockFileManager() {
	    directories = new java.util.HashMap<String, Directory>();
	    directories.put("", new data.Directory(""));
	    files = new java.util.HashMap<String, String>();
	    history = new ArrayList<String>();
	    stack = new java.util.Stack<String>();
	    fullCurrDirPath = "";
	  }
	
	
	@Override
	public Directory getCurrent() {
	     return null;
		//return currentDirectory;
	}
	@Override
	public void setCurrent(Directory newCurrent) {
		//this.currentDirectory=newCurrent;
		
	}
	@Override
	public String getPath() {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public void setPath(String newPath) {
		// TODO Auto-generated method stub
		
	}
	
	public String getCurrentFullPath() {
		return fullCurrDirPath;
	}
	
	public void pushStack(String dir) {
		stack.push(dir);
		
	}
	@Override
	public Directory popStack() {
		// TODO Auto-generated method stub
		//return stack.pop();
	  return null;
	}
	@Override
	public Directory pathToCurrent(Directory currentdir, String path) throws NonvalidArgumentException {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public Directory currentToRoot(Directory currentdir) {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public void saveCurrentToStack() {
		// TODO Auto-generated method stub
		
	}
	@Override
	public boolean checkPathToFile(String path, Directory currentDir) {
		// TODO Auto-generated method stub
		return false;
	}


  @Override
  public void redirection(FileManager fm, String[] args, String output) {
    // TODO Auto-generated method stub
    
  }


  @Override
  public ArrayList<String> getInputHistory() {
    // TODO Auto-generated method stub
    return null;
  }


  @Override
  public void makeFile(String newFile, String contents, Directory current)
      throws NonvalidArgumentException {
    // TODO Auto-generated method stub
    
  }


  @Override
  public void setDirectoryStack(Stack<Directory> directoryStack) {
    // TODO Auto-generated method stub
    
  }


  @Override
  public void mergeInputHistory(ArrayList<String> inputHistory) {
    // TODO Auto-generated method stub
    
  }


  @Override
  public void addInputHistory(String userInput) {
	  history.add(userInput);
    
  }


  @Override
  public void updateInputHistory(ArrayList<String> previous_history) {
    // TODO Auto-generated method stub
	  return;
  }


  @Override
  public Stack<Directory> getDirectoryStack() {
    // TODO Auto-generated method stub
    return null;
  }


  @Override
  public String getCurrentFullPath(Directory currentDir) {
    // TODO Auto-generated method stub
    return null;
  }


  @Override
  public int redirectionChecker(String[] args) {
    // TODO Auto-generated method stub
    return 0;
  }


  @Override
  public String formatRedirect(String[] args) {
    // TODO Auto-generated method stub
    return null;
  }


@Override
public void pushStack(Directory dir) {
	// TODO Auto-generated method stub
	
}


@Override
public Directory getRoot() {
	// TODO Auto-generated method stub
	return null;
}


@Override
public boolean checkPathToDir(Directory currentdir, String string) {
	// TODO Auto-generated method stub
	return false;
}


@Override
public String doubleQuotetoString(String[] args) throws NonvalidArgumentException {
  // TODO Auto-generated method stub
  return null;
}



	
	

}
