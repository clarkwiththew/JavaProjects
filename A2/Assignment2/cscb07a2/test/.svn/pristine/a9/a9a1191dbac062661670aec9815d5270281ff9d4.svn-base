// **********************************************************
// Assignment2:
// Student1:
// UTORID user_name: wangj930
// UT Student #: 1006390031
// Author: Junheng Wang
//
// Student2:
// UTORID user_name: anadaeth
// UT Student #: 1003171907
// Author: Ethan Ananda
//
// Student3:
// UTORID user_name: shinhy22
// UT Student #: 997743615
// Author: Hyun Woo (Eddie) Shin
//
// Student4:
// UTORID user_name: chouivan
// UT Student #: 1003599732
// Author: Ivanhoe Chou
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC B07 and understand the consequences.
// *********************************************************
package test;

import static org.junit.Assert.*;

import org.junit.Test;
import org.junit.Before;
import commands.Cd;
import errorHandler.NonvalidArgumentException;

/**
 * @author Junheng Wang, Hyun Woo (Eddie) Shin, Ivanhoe Chou, Ethan Ananda
 */


public class CdTest {
	
	Cd cd = new commands.Cd();
	private MockFileManager MockFM; 
	
	
	  @Before
	  public void setUp() {
	    // Create a directory named mockdir with parent the root directory
	    MockFM = new MockFileManager();
	    MockFM.directories.put("mockdir",
	        new data.Directory("mockdir",MockFM.directories.get("")));
	  }
	
	  
	  @Test
	  /**
	   * Testing changing to a directory that exists in the fm
	   */
	  public void ExistingDir() throws NonvalidArgumentException{
	    // cd should be able to change to testdir and return a newline
	    try {
	    	String []inputArrayString= {"cd", "mockdir"};
	    	String result = cd.run(MockFM, inputArrayString);
	    	assertEquals(result, "\n");
	    	// The new current directory should reflect the change
	    	assertEquals(MockFM.currentDirectory, "mockdir");
	    } catch (NonvalidArgumentException e) {
	      // This shouldn't cause an error
	      fail("Error when changing to a valid directory");
	    }
	  }
	  
	 
	  @Test
	  /**
	   * Testing changing to a directory that does not exist in the fm
	   */
	  public void NoDir() throws NonvalidArgumentException{
		  
	  }
	  
	  
	  @Test
	  /**
	   * Testing changing to the parent directory with ..
	   * and staying in the same directory with . 
	   */
	  public void DotDot() throws NonvalidArgumentException{
		  
	  }

}
